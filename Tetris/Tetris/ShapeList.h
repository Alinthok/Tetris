#pragma once
#include <vector>
#include <SFML/Graphics.hpp>
#include "Piece.h"

typedef std::vector <std::vector <std::vector<int>>> Vector3Di;

class ShapeList
{
	Vector3Di shapeL{ { {0, 0, 0},
						{1, 1, 1},
						{1, 0, 0} },

					  { {1, 1, 0},
						{0, 1, 0},
						{0, 1, 0} },

					  { {0, 0, 1},
						{1, 1, 1},
						{0, 0, 0} },

					  { {0, 1, 0},
						{0, 1, 0},
						{0, 1, 1} } };

	Vector3Di shapeJ{ { {0, 0, 0},
						{1, 1, 1},
						{0, 0, 1} },

				      { {0, 1, 0},
						{0, 1, 0},
						{1, 1, 0} },

					  { {1, 0, 0},
						{1, 1, 1},
						{0, 0, 0} },

					  { {0, 1, 1},
						{0, 1, 0},
						{0, 1, 0} } };

	Vector3Di shapeS{ { {0, 0, 0},
						{0, 1, 1},
						{1, 1, 0} },

					  { {1, 0, 0},
						{1, 1, 0},
						{0, 1, 0} },

					  { {0, 1, 1},
						{1, 1, 0},
						{0, 0, 0} },

					  { {0, 1, 0},
						{0, 1, 1},
						{0, 0, 1} } };

	Vector3Di shapeZ{ { {0, 0, 0},
						{1, 1, 0},
						{0, 1, 1} },

					  { {0, 1, 0},
						{1, 1, 0},
						{1, 0, 0} },

					  { {1, 1, 0},
						{0, 1, 1},
						{0, 0, 0} },

					  { {0, 0, 1},
						{0, 1, 1},
						{0, 1, 0} } };

	Vector3Di shapeT{ { {0, 0, 0},
						{1, 1, 1},
						{0, 1, 0} },

					  { {0, 1, 0},
						{1, 1, 0},
						{0, 1, 0} },

					  { {0, 1, 0},
						{1, 1, 1},
						{0, 0, 0} },

					  { {0, 1, 0},
						{0, 1, 1},
						{0, 1, 0} }, };

	Vector3Di shapeO{ { {0, 0, 0, 0},
						{0, 1, 1, 0},
						{0, 1, 1, 0},
		                {0, 0, 0, 0} } };

	Vector3Di shapeI{ { {0, 0, 0, 0},
						{1, 1, 1, 1},
						{0, 0, 0, 0},
						{0, 0, 0, 0} },

					  { {0, 0, 1, 0},
						{0, 0, 1, 0},
						{0, 0, 1, 0},
						{0, 0, 1, 0} },

					  { {0, 0, 0, 0},
						{0, 0, 0, 0},
						{1, 1, 1, 1},
						{0, 0, 0, 0} },

					  { {0, 1, 0, 0},
						{0, 1, 0, 0},
						{0, 1, 0, 0},
						{0, 1, 0, 0} } };

	Vector3Di shapeX{ { {0}, }, };

public:
	Vector3Di getShape(int n);
	std::vector<Piece> getPieces(int n);
};